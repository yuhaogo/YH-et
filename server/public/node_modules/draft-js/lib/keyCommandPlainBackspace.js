define('node_modules/draft-js/lib/keyCommandPlainBackspace', function(require, exports, module) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule keyCommandPlainBackspace
   * 
   */
  
  'use strict';
  
  var EditorState = require('node_modules/draft-js/lib/EditorState');
  var UnicodeUtils = require('node_modules/fbjs/lib/UnicodeUtils');
  
  var moveSelectionBackward = require('node_modules/draft-js/lib/moveSelectionBackward');
  var removeTextWithStrategy = require('node_modules/draft-js/lib/removeTextWithStrategy');
  
  /**
   * Remove the selected range. If the cursor is collapsed, remove the preceding
   * character. This operation is Unicode-aware, so removing a single character
   * will remove a surrogate pair properly as well.
   */
  function keyCommandPlainBackspace(editorState) {
    var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {
      var selection = strategyState.getSelection();
      var content = strategyState.getCurrentContent();
      var key = selection.getAnchorKey();
      var offset = selection.getAnchorOffset();
      var charBehind = content.getBlockForKey(key).getText()[offset - 1];
      return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);
    }, 'backward');
  
    if (afterRemoval === editorState.getCurrentContent()) {
      return editorState;
    }
  
    var selection = editorState.getSelection();
    return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'backspace-character' : 'remove-range');
  }
  
  module.exports = keyCommandPlainBackspace;

});
