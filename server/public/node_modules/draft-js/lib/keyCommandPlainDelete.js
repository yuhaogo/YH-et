define('node_modules/draft-js/lib/keyCommandPlainDelete', function(require, exports, module) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule keyCommandPlainDelete
   * 
   */
  
  'use strict';
  
  var EditorState = require('node_modules/draft-js/lib/EditorState');
  var UnicodeUtils = require('node_modules/fbjs/lib/UnicodeUtils');
  
  var moveSelectionForward = require('node_modules/draft-js/lib/moveSelectionForward');
  var removeTextWithStrategy = require('node_modules/draft-js/lib/removeTextWithStrategy');
  
  /**
   * Remove the selected range. If the cursor is collapsed, remove the following
   * character. This operation is Unicode-aware, so removing a single character
   * will remove a surrogate pair properly as well.
   */
  function keyCommandPlainDelete(editorState) {
    var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {
      var selection = strategyState.getSelection();
      var content = strategyState.getCurrentContent();
      var key = selection.getAnchorKey();
      var offset = selection.getAnchorOffset();
      var charAhead = content.getBlockForKey(key).getText()[offset];
      return moveSelectionForward(strategyState, charAhead ? UnicodeUtils.getUTF16Length(charAhead, 0) : 1);
    }, 'forward');
  
    if (afterRemoval === editorState.getCurrentContent()) {
      return editorState;
    }
  
    var selection = editorState.getSelection();
  
    return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'delete-character' : 'remove-range');
  }
  
  module.exports = keyCommandPlainDelete;

});
